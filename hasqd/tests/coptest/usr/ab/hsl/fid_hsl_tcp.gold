<svt> print net protocol
hasq
<svt> ex 0 OK 100 tcp self [ ping ]
<svt> ag fs cat "tcp.log"
<agt> # fs cat tcp.log
<agt> tcp.log

=== Received ===
ping


=== Payload  ===
ping
================

<svt> ag fs rm "tcp.log"
<agt> # fs rm tcp.log
<agt> OK
<svt> print net protocol [ http_get ]
hasq -> http_get
<svt> print net protocol
http_get
<svt> ex 0 OK 100 tcp self [ ping ]
<svt> ag fs cat "tcp.log"
<agt> # fs cat tcp.log
<agt> tcp.log

=== Received ===
GET /ping


=== Payload  ===
ping
================

<svt> ag fs rm "tcp.log"
<agt> # fs rm tcp.log
<agt> OK
<svt> print net protocol [ http_post ]
http_get -> http_post
<svt> print net protocol
http_post
<svt> ex 0 OK 100 tcp self [ ping ]
<svt> ag fs cat "tcp.log"
<agt> # fs cat tcp.log
<agt> tcp.log

=== Received ===
POST / HTTP/1.0
Content-Length: 12

command=ping
=== Payload  ===
ping
================

<svt> ag fs rm "tcp.log"
<agt> # fs rm tcp.log
<agt> OK
<svt> print net protocol "hasq"
http_post -> hasq
<svt> print net protocol
hasq
<svt> quit
