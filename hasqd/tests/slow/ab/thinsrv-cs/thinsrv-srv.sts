#!/bin/sh

#	Thin functionality test for two separated PC. 
#	Client writes data into database and collects data about memory states and db-folders volume in a .log and .out files.

#	Port which server is listening
PORT1=14011
PIDFILE1=hq.$PORT1.lock
LOGFILE=thinsrv-srv.log
DPRNSTATUS=0
DSVTSTATUS=0

# 	TIME0 can be ONLY "m" for minutes or "s" for seconds. If we choose "s", then INTERVAL will be calculated in seconds
TIME0=m

#	Intervals in minutes or seconds - it depends on the value of TIME0
INTERVAL=30

###########################################################################################################

if [ $TIME0 != "m" -a $TIME0 != "s"  ] 
then 
	echo "Error: TIME0 must be ONLY \"m\" or \"s\""
	exit
fi

printlog() {
	[ $PLAT = "Linux" ] && echo "	free memory is - $(free -k | grep "Mem:" | sed 's/ \+/\t/g' | cut -f 4) Kb" >> $LOGFILE || echo "	free memory is - $(cmd /c %systemroot%/system32/wbem/wmic.exe os get FreePhysicalMemory | grep -o '[0-9]*') Kb" >> $LOGFILE
	echo "	index/_md5 size:	$(du -hs index/_md5 | grep "_md5" | sed 's/ \+/\t/g' | cut -f 1)	slice/_md5 size:	$(du -hs slice/_md5 | grep "_md5" | sed 's/ \+/\t/g' | cut -f 1)"  >> $LOGFILE 
	echo "	index/_s22 size:	$(du -hs index/_s22 | grep "_s22" | sed 's/ \+/\t/g' | cut -f 1)	slice/_s22 size:	$(du -hs slice/_s22 | grep "_s22" | sed 's/ \+/\t/g' | cut -f 1)" >> $LOGFILE 
}

uname | grep -i "CYGWIN" > /dev/null && PLAT="Windows" || PLAT="Linux"

if [ -f $PIDFILE1 ]
then
	PID=$(cat $PIDFILE1)
	[ $PLAT = "Linux" ] && kill -9 $PID >/dev/null 2>&1
	[ $PLAT = "Windows" ] && taskkill /PID $PID /F >/dev/null 2>&1
	rm -f $PIDFILE1 >/dev/null 2>&1
fi

[ -f $LOGFILE ] && rm -f $LOGFILE >/dev/null 2>&1

echo "Startup time is `date +"%H:%M"`" >> $LOGFILE
echo "Current platform is ${PLAT} " > $LOGFILE
echo "HASQD Server was started on port $PORT1" >> $LOGFILE
echo ""  >> $LOGFILE
echo -n "`date +"%H:%M"`	-	before the start of test" >> $LOGFILE

$1/zdb erasedisk "create _md5 md5 MD5 1 [abc] 2000 300" "create _s22 s22 SHA2-256 1 [abc] 1000 800"

printlog

$1/hasqd -c quit=1 lock=1 tcp_port=$PORT1 &

until [ -f $PIDFILE1 ]
do 
	echo >/dev/null
done

RUNTIME=0

while [ -f $PIDFILE1 ]
do
	sleep $INTERVAL$TIME0
	RUNTIME=$(($RUNTIME + $INTERVAL))
	[ $TIME0 = "m" ] && echo -n "`date +"%H:%M"`	-	$RUNTIME	minutes past,	" >> $LOGFILE || echo -n "`date +"%H:%M"`	-	$RUNTIME seconds past,	" >> $LOGFILE
	printlog


done

echo -n "`date +"%H:%M"`	-	after the end of test:	" >> $LOGFILE
printlog

$1/zdb erasedisk
